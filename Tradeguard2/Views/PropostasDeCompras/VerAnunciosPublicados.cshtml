@model IEnumerable<Anuncios>
@using Microsoft.AspNetCore.Identity
@using Microsoft.EntityFrameworkCore
@using Tradeguard2.Data
@using Tradeguard2.Helpers
@using Tradeguard2.Helpers
@inject UserManager<ApplicationUser> UserManager
@inject ApplicationDbContext ApplicationDbContext
@{
    ViewData["Title"] = "Index";

    var mediaQueryAnuncios = @"
        @media screen and (max-width: 960px) {
            .cardProposta {
                /* Estilos específicos para a seção de anúncios publicados */
                flex-direction: column;
                /* Adicione outros estilos conforme necessário */
            }
  .button-container{
    display:block;
        }
            .imgProposta {
                /* Estilos específicos para a seção de anúncios publicados */
                max-width: 100%;
                border-radius: 10px 10px 0 0;
                /* Adicione outros estilos conforme necessário */
            }

            .card-info-proposta {
                /* Estilos específicos para a seção de anúncios publicados */
                padding: 10px;
                /* Adicione outros estilos conforme necessário */
            }

            #tituloProposta {
                /* Estilos específicos para a seção de anúncios publicados */
                font-size: 20px;
                /* Adicione outros estilos conforme necessário */
            }

            #precoProposta {
                /* Estilos específicos para a seção de anúncios publicados */
                font-size: 15px;
                font-weight: bold;
                margin-bottom: 0px;
                margin-left: 0px;
                /* Adicione outros estilos conforme necessário */
            }

            .button-container-proposta {
                /* Estilos específicos para a seção de anúncios publicados */
                flex-direction: column;
                /* Adicione outros estilos conforme necessário */
            }

            .button-acao,
            .button-recusar,
            #botao_anunciar {
                width: 100%;
                padding: 8px;
                /* Adicione outros estilos conforme necessário */
            }
        }
    ";

    var mediaQueryPropostas = @"
        @media screen and (max-width: 600px) {
            .cardProposta {
                /* Estilos específicos para a seção de propostas de aceite */
                flex-direction: column;
                /* Adicione outros estilos conforme necessário */
            }

            .imgProposta {
                /* Estilos específicos para a seção de propostas de aceite */
                max-width: 100%;
                border-radius: 10px 10px 0 0;
                /* Adicione outros estilos conforme necessário */
            }

            .card-info-proposta {
                /* Estilos específicos para a seção de propostas de aceite */
                padding: 10px;
                /* Adicione outros estilos conforme necessário */
            }

            #tituloProposta {
                /* Estilos específicos para a seção de propostas de aceite */
                font-size: 20px;
                /* Adicione outros estilos conforme necessário */
            }

            #precoProposta {
                /* Estilos específicos para a seção de propostas de aceite */
                font-size: 15px;
                font-weight: bold;
                margin-bottom: 0px;
                margin-left: 0px;
                /* Adicione outros estilos conforme necessário */
            }

            .button-container-proposta {
                /* Estilos específicos para a seção de propostas de aceite */
                flex-direction: column;
                /* Adicione outros estilos conforme necessário */
            }

            .button-acao,
            .button-recusar,
            #botao_anunciar {
                width: 100%;
                padding: 8px;
                /* Adicione outros estilos conforme necessário */
            }
        }
    ";
}

@section Style {
    <style>
        /* (Estilos existentes) */
 .cardProposta {
            display: flex;
            border: 1px solid #e0e0e0;
            border-radius: 10px;
            margin-top: 20px;
            margin-bottom: 20px;
            overflow: hidden;
            width: 100%;
            background-color: white;
            transition: transform 0.2s;
           -webkit-box-shadow: 0px 0px 15px 7px rgba(0,0,0,0.15);
            border-radius: 10px;
            padding: 15px;
            margin-top: 10px;
            margin-bottom: 10px;
        }

        .imgProposta {
            flex: 1;
            max-width: 300px;
            border-radius: 10px 0 0 10px;
        }

        .imgProposta img {
            width: 100%;
            border-radius: 10px;
            height: auto;
        }

        .card-info-proposta {
            flex: 2;
            padding: 20px;
        }

        #tituloProposta {
            font-size: 24px;
            font-weight: bold;
            align-items: start;
        }

        #precoProposta {
            font-size: 15px;
            font-weight: bold;
            margin-bottom: 0px;
            margin-left: 5px;
        }

        .button-container-proposta {
            display: flex;
            gap: 10px;
            margin-top: 20px;
        }

        .button-acao, .button-recusar {
            background-color: #4CAF50;
            border-color: #4CAF50;
            color: white;
            border-radius: 10px;
            padding: 10px;
            cursor: pointer;
        }

        .button-acao:hover, .button-recusar:hover {
            background-color: white;
            color: #4CAF50;
            border-color: #4CAF50;
            border-width: 1px;
            border-radius: 10px;
            padding: 10px;
            cursor: pointer;
        }

        .separador {
            border-top: 1px solid #112647;
            margin-top: 20px;
            margin-bottom: 20px;
        }

        #botao_anunciar {
            color: white;
            background-color: #112647;
            border-color: white;
            border-radius: 10px;
            border-width: 2px;
            border-style: solid;
            text-decoration: none;
            padding: 10px;
            cursor: pointer;
        }

        #botao_anunciar:hover {
            color: #112647;
            background-color: white;
            border-color: #112647;
            border-radius: 10px;
            border-width: 2px;
            border-style: solid;
            text-decoration: none;
            padding: 10px;
            cursor: pointer;
        }
        .button-container{
            display: flex;
        gap: 10px;
        }

        @Html.Raw(mediaQueryAnuncios)
        @Html.Raw(mediaQueryPropostas)
    </style>
} 
@{
    var userLoginId = await UserManager.GetUserAsync(User);
    var AnunciadorNome = "";
}
<div>
    <div class="organizador_botoes" style="margin-top:30px;">
     
        <div>
            <h1 class="titulo">Anúncios Publicados por  @ViewBag.anunciadorNome</h1>
        </div>
    </div>
    <div class="separador"></div>
  


@if (Model.Any())
{
    @foreach (var anuncio in Model)
    {
        

        @* var anunciador = await UserManager.FindByIdAsync(anuncio.UserId);
            AnunciadorNome = anunciador.Nome; *@
            <div class="cardProposta">
            <div class="imgProposta">
                <img class="card-img-top" src="@ImageHelper.GetImageLink(anuncio.Imagem_destaque, "AnunciosEnviado")" alt="Imagem do Anúncio" asp-append-version="true" />
            </div>
            <div class="card-info-proposta">
                <p id="tituloProposta">@Html.DisplayFor(modelItem => anuncio.Titulo)</p>
                <p id="precoProposta">@Html.DisplayFor(modelItem => anuncio.Preco)€</p>
                <p id="localizacao_hora">@Html.DisplayFor(modelItem => anuncio.localizacao)</p>
                <div class="button-container">
                    <form asp-action="Details" asp-controller="Anuncios" method="post">
                        <input type="hidden" name="id" value="@anuncio.Id_anuncio" />
                        <button type="submit" id="botao_anunciar">Ver Anúncio</button>
                    </form>
                     <form asp-action="Create" asp-controller="Favoritos" style="flex: 0 0 20%;">
                           @{
                               var user1 = await UserManager.GetUserAsync(User);
                               var UserAnunciosFavoritos = new List<Favoritos>();  

                                if (user1 != null)
                                {
                                    UserAnunciosFavoritos = await ApplicationDbContext.Favoritos
                                    .Where(m => m.Id_Anuncio == anuncio.Id_anuncio && m.CC == user1.CC)
                                    .ToListAsync();
                                }
                           }


        <input type="hidden" id="Id_Anuncio" name="Id_Anuncio" value="@Html.DisplayFor(modelItem => anuncio.Id_anuncio)">
        <button type="submit" id="botao_anunciar" style="width: 100%;">
                            @if(UserAnunciosFavoritos.Count > 0)
                            {
                             <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="red" class="bi bi-heart-fill" viewBox="0 0 16 16">
                              <path fill-rule="evenodd" d="M8 1.314C12.438-3.248 23.534 4.735 8 15-7.534 4.736 3.562-3.248 8 1.314"/>
                            </svg>
                            }
                            else
                            {
                                  <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-heart" viewBox="0 0 16 16">
                                <path d="m8 2.748-.717-.737C5.6.281 2.514.878 1.4 3.053c-.523 1.023-.641 2.5.314 4.385.920 1.815 2.834 3.989 6.286 6.357 3.452-2.368 5.365-4.542 6.286-6.357.955-1.886.838-3.362.314-4.385C13.486.878 10.4.28 8.717 2.01L8 2.748zM8 15C-7.333 4.868 3.279-3.04 7.824 1.143c.06.055.119.112.176.171a3.12 3.12 0 0 1 .176-.17C12.72-3.042 23.333 4.867 8 15z" />
                            </svg>
                            }
        </button>
    </form>
                </div>
            </div>
        </div>
    }
}
else
{
    <p> O utilizador não tem Anúncios publicados.</p>
}



   
</div>

